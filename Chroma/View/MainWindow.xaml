<Window x:Class="Chroma.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:Chroma"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:vm="clr-namespace:Chroma.ViewModel"
		mc:Ignorable="d"
		Title="Chroma"
		Height="360" Width="550"
		MinWidth="300" MinHeight="360"
		MaxWidth="800" MaxHeight="700"
		WindowStartupLocation="CenterScreen"
		Topmost="{Binding IsOnTop}">
	<Window.InputBindings>
		<KeyBinding Key="Esc" Command="{Binding ColourPickerCancelCommand}"/>
	</Window.InputBindings>
	<Window.DataContext>
		<vm:MainWindowViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Resources/Resources.xaml"/>
				<ResourceDictionary Source="Resources/ControlStyles.xaml"/>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>
	<Grid IsEnabled="{Binding IsColourPicker, Converter={StaticResource booleanInverter}}" TextBlock.FontFamily="{StaticResource MainFont}"
		Background="{StaticResource Application.Primary}"
		TextBlock.Foreground="{StaticResource Application.Content}">
		<Grid.ColumnDefinitions>
			<ColumnDefinition MinWidth="100" Width="5*"/>
			<ColumnDefinition Width="8"/>
			<ColumnDefinition MinWidth="50" Width="200"/>
		</Grid.ColumnDefinitions>
		<Grid>
			<Grid.Resources>
				<Style x:Key="ColourEditControl" TargetType="{x:Type Control}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding CurrentColour}" Value="{x:Null}">
							<Setter Property="IsEnabled" Value="False"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Resources>
			<Grid.RowDefinitions>
				<RowDefinition Height="100"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<DockPanel Margin="10">
				<!-- Action buttons. -->
				<StackPanel Margin="0 0 5 0" Height="50" VerticalAlignment="Top" DockPanel.Dock="Left">
					<StackPanel.Resources>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButton}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding CurrentColour}" Value="{x:Null}">
									<Setter Property="IsEnabled" Value="False"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</StackPanel.Resources>
					<!-- Randomize Button. -->
					<Button Content="?" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Command="{Binding RandomizeColourButtonCommand}">
						<Button.ToolTip>
							<ToolTip Content="Randomize"/>
						</Button.ToolTip>
					</Button>
					<!-- Colour Picker Button. -->
					<Button Padding="0 1" Margin="0 4 0 0" Command="{Binding ColourPickerButtonCommand}">
						<Button.ToolTip>
							<ToolTip Content="Colour Picker"/>
						</Button.ToolTip>
						<Button.Content>
							<Path
								Data="m 3.2425599 1.409285 1e-7 1e-7 c 0.103647 0.1036471 0.103647 0.2705302 0 0.3741773 -0.1036472 0.1036471 -0.2705303 0.1036471 -0.3741774 1e-7 l -10e-8 -1e-7 C 2.8178046 1.7328845 2.6812939 1.5963737 2.6812939 1.5963737 c 0 0 0.1340194 -0.1340194 0.1870887 -0.1870887 0.052906 -0.052906 0.1870886 -0.1870885 0.1870886 -0.1870885 0 0 0.1363483 0.1363481 0.1870887 0.1870885 z M 2.3071167 0.4738417 v 0 c -0.1036471 -0.1036471 -0.2705303 -0.1036471 -0.3741773 0 -0.1036472 0.1036471 -0.1036472 0.2705302 -1e-7 0.3741773 l 1e-7 1e-7 c 0.050578 0.050578 0.1870885 0.1870886 0.1870885 0.1870886 0 0 0.1340195 -0.1340194 0.1870888 -0.1870887 0.052906 -0.052906 0.1870885 -0.1870886 0.1870885 -0.1870886 0 0 -0.136348 -0.1363482 -0.1870885 -0.1870887 z M 3.1490156 0.00612 3.7041667 0 3.7102867 0.567381 0.99750091 3.2801668 c 0 0 -0.30253803 0.2046594 -0.4677216 0.280633 -0.0895834 0.041203 -0.28063307 0.093544 -0.28063307 0.093544 -0.1209223 0 -0.1870884 -0.066166 -0.1870886 -0.1870886 0 0 0.05233822 -0.1910462 0.09353936 -0.2806278 C 0.2315698 3.0214435 0.4362299 2.7189058 0.4362299 2.7189058 M 2.4942053 1.409285 2.3071167 1.2221964 0.62331871 2.9059945 0.81040731 3.0930831 Z"
								Width="14" Height="14"
								Stretch="Uniform"
								Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
						</Button.Content>
					</Button>
				</StackPanel>
				<Grid DockPanel.Dock="Right" UseLayoutRounding="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Border SnapsToDevicePixels="True" Background="Black" CornerRadius="5 0 0 5"/>
					<Border SnapsToDevicePixels="True" Background="White" Grid.Column="1" CornerRadius="0 5 5 0"/>
					<Border SnapsToDevicePixels="True" CornerRadius="5" Grid.ColumnSpan="2">
						<Border.Background>
							<SolidColorBrush Color="{Binding CurrentColour.Colour}"/>
						</Border.Background>
					</Border>
				</Grid>
			</DockPanel>
			<Grid Grid.Row="1" Margin="10">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<DockPanel Margin="0 0 10 0">
					<!-- Sliders -->
					<Grid Margin="0 0 10 0" DockPanel.Dock="Top">
						<Grid.Resources>
							<Style TargetType="{x:Type Slider}" BasedOn="{StaticResource ColourEditControl}">
								<Setter Property="Minimum" Value="0"/>
								<Setter Property="Maximum" Value="255"/>
								<Setter Property="Grid.Column" Value="1"/>
								<Setter Property="Margin" Value="0 2"/>
							</Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="VerticalAlignment" Value="Center"/>
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="18"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<!-- Alpha Slider -->
						<TextBlock Text="A"/>
						<Slider Template="{DynamicResource ThemedSlider}" Value="{Binding A}"/>
						<!-- Red Slider -->
						<TextBlock Grid.Row="1" Text="R"/>
						<Slider Template="{DynamicResource ThemedSlider}" Grid.Row="1" Value="{Binding R}" />
						<!-- Green Slider -->
						<TextBlock Grid.Row="2" Text="G"/>
						<Slider Template="{DynamicResource ThemedSlider}" Grid.Row="2" Value="{Binding G}"/>
						<!-- Blue Slider -->
						<TextBlock Grid.Row="3" Text="B"/>
						<Slider Template="{DynamicResource ThemedSlider}" Grid.Row="3" Value="{Binding B}"/>
					</Grid>
					<!-- Colour text boxes -->
					<Grid DockPanel.Dock="Top">
						<Grid.Resources>
							<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ColourEditControl}">
								<Setter Property="Margin" Value="0 0 0 0"/>
								<Setter Property="Height" Value="18"/>
								<Setter Property="VerticalContentAlignment" Value="Center"/>
								<Setter Property="Background" Value="{StaticResource Application.Secondary}"/>
								<Setter Property="BorderBrush" Value="{StaticResource Application.Borders.Bright}"/>
								<Setter Property="Foreground" Value="{StaticResource Application.Content}"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding CurrentColour}" Value="{x:Null}">
										<Setter Property="Foreground" Value="White"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
							<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButton}">
								<Setter Property="Margin" Value="-1 0 0 0"/>
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"/>
								<Setter Property="Border.CornerRadius" Value="0"/>
								<Setter Property="BorderBrush" Value="{StaticResource Application.Borders.Bright}"/>
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="10"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<!-- RGB text box -->
						<TextBlock Text="RGB" Margin="0 0 0 2"/>
						<DockPanel Grid.Row="1">
							<Button DockPanel.Dock="Right" Command="{Binding CopyColourButtonCommand}" CommandParameter="{StaticResource rgbConverter}">
								<Path Style="{StaticResource copyIcon}"/>
							</Button>
							<TextBox Text="{Binding Colour, Converter={StaticResource rgbConverter}}"/>
						</DockPanel>
						<!-- ARGB text box -->
						<TextBlock Margin="0 4 0 2" Grid.Row="2" Text="ARGB"/>
						<DockPanel Grid.Row="3">
							<Button DockPanel.Dock="Right" Command="{Binding CopyColourButtonCommand}" CommandParameter="{StaticResource argbConverter}">
								<Path Style="{StaticResource copyIcon}"/>
							</Button>
							<TextBox Text="{Binding Colour, Converter={StaticResource argbConverter}}"/>
						</DockPanel>
						<!-- Hex text box -->
						<TextBlock Margin="0 0 0 2" Grid.Column="2" Text="Hex (RGB)"/>
						<DockPanel Grid.Column="2" Grid.Row="1">
							<Button DockPanel.Dock="Right" Command="{Binding CopyColourButtonCommand}" CommandParameter="{StaticResource hexConverter}">
								<Path Style="{StaticResource copyIcon}"/>
							</Button>
							<TextBox Text="{Binding Colour, Converter={StaticResource hexConverter}}"/>
						</DockPanel>
						<!-- Hex (Alpha) text box -->
						<TextBlock Margin="0 4 0 2" Grid.Column="2" Grid.Row="2" Text="Hex (ARGB)"/>
						<DockPanel Grid.Column="2" Grid.Row="3">
							<Button DockPanel.Dock="Right" Command="{Binding CopyColourButtonCommand}" CommandParameter="{StaticResource aHexConverter}">
								<Path Style="{StaticResource copyIcon}"/>
							</Button>
							<TextBox Text="{Binding Colour, Converter={StaticResource aHexConverter}}"/>
						</DockPanel>
					</Grid>
					<!-- This may be replaced with a different type of slider in the future. -->
					<Slider Template="{DynamicResource ContentSlider}" Value="{Binding Colour, Converter={StaticResource gradientScaleConverter}}" Margin="0 10 0 0" Minimum="0" Maximum="255" Height="20" DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
						<Slider.Style>
							<Style TargetType="{x:Type Slider}" BasedOn="{StaticResource ColourEditControl}"/>
						</Slider.Style>
						<Slider.Background>
							<LinearGradientBrush StartPoint="0, 0" EndPoint="1, 0">
								<GradientStop Color="Black"/>
								<GradientStop Offset="1" Color="{Binding CurrentColour.Colour, Converter={StaticResource gradientConverter}}"/>
							</LinearGradientBrush>
						</Slider.Background>
					</Slider>
				</DockPanel>
				<!-- Colour spectrum slider -->
				<Border Grid.Column="1" BorderBrush="Black" BorderThickness="1">
					<Border.Background>
						<LinearGradientBrush StartPoint="0, 0" EndPoint="0, 1">
							<GradientStop Offset="0" Color="Red"/>
							<GradientStop Offset="0.2" Color="Yellow"/>
							<GradientStop Offset="0.4" Color="Green"/>
							<GradientStop Offset="0.6" Color="Cyan"/>
							<GradientStop Offset="0.8" Color="Blue"/>
							<GradientStop Offset="1" Color="Purple"/>
						</LinearGradientBrush>
					</Border.Background>
				</Border>
			</Grid>
		</Grid>
		<GridSplitter Width="8" Grid.Column="1" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext">
			<GridSplitter.Template>
				<ControlTemplate>
					<Border Background="Transparent">
						<Border Width="2" Background="{StaticResource Application.Borders.Bright}" Margin="0 10"/>
					</Border>
				</ControlTemplate>
			</GridSplitter.Template>
		</GridSplitter>
		<!-- Right Sidebar -->
		<Grid Grid.Column="2" Margin="10">
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="46"/>
				<RowDefinition Height="100"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<!-- Saved colours box -->
			<ListBox Background="{StaticResource Application.Secondary}" BorderThickness="1" BorderBrush="{StaticResource Application.Borders.Bright}" SelectedItem="{Binding CurrentColour}" SelectedIndex="0" ItemsSource="{Binding SavedColours}">
				<ListBox.InputBindings>
					<KeyBinding Modifiers="Shift" Key="Up" Command="{Binding ColoursMoveCommand}" CommandParameter="{x:Static vm:ItemDirection.Up}"/>
					<KeyBinding Modifiers="Shift" Key="Down" Command="{Binding ColoursMoveCommand}" CommandParameter="{x:Static vm:ItemDirection.Down}"/>
					<MouseBinding Gesture="LeftClick" Command="{Binding ColourEditBoxEnterCommand}"/>
				</ListBox.InputBindings>
				<ListBox.Style>
					<Style TargetType="{x:Type ListBox}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBox}">
									<Grid Width="Auto" Height="Auto">
										<Border x:Name="Border" 
                                        BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
										<ScrollViewer Focusable="false" IsTabStop="False" HorizontalScrollBarVisibility="Disabled">
											<StackPanel IsItemsHost="true"/>
										</ScrollViewer>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="IsEnabled" Value="false">
											<Setter TargetName="Border" Property="Border.Background" Value="{StaticResource Application.Secondary}"/>
										</Trigger>
										<Trigger Property="IsGrouping" Value="true">
											<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.Style>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<DataTemplate.Resources>
							<DataTemplate x:Key="ViewContent">
								<TextBlock Margin="5 0 0 0" Foreground="{StaticResource Application.Content}" VerticalAlignment="Center" Text="{Binding Name}"/>
							</DataTemplate>
							<DataTemplate x:Key="EditContent">
								<TextBox x:Name="editBox" Background="{StaticResource Application.Secondary}" BorderBrush="{StaticResource Application.Borders.Bright}" Foreground="{StaticResource Application.Content}" Margin="5 0 0 0" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FocusManager.FocusedElement="{Binding ElementName=editBox}" CaretIndex="{x:Static sys:Int32.MaxValue}">
									<TextBox.InputBindings>
										<KeyBinding Key="Enter" Command="{Binding DataContext.ColourEditBoxEnterCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>
									</TextBox.InputBindings>
								</TextBox>
							</DataTemplate>
						</DataTemplate.Resources>
						<StackPanel Orientation="Horizontal">
							<Border Width="18" Height="18" BorderThickness="1" BorderBrush="Black" CornerRadius="5">
								<Border.Background>
									<SolidColorBrush Color="{Binding Colour}"/>
								</Border.Background>
							</Border>
							<ContentPresenter Content="{Binding}">
								<ContentPresenter.Style>
									<Style TargetType="{x:Type ContentPresenter}">
										<Setter Property="ContentTemplate" Value="{StaticResource ViewContent}"/>
										<Style.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding DataContext.IsEdit, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" Value="True"/>
													<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<Setter Property="ContentTemplate" Value="{StaticResource EditContent}"/>
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</ContentPresenter.Style>
							</ContentPresenter>
						</StackPanel>
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ListBox.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Style.Resources>
							<Style x:Key="FocusVisual">
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
							<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
							<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
							<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
							<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
							<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
							<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
						</Style.Resources>
						<Setter Property="SnapsToDevicePixels" Value="True"/>
						<Setter Property="Padding" Value="4,1"/>
						<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
						<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
						<Setter Property="Background" Value="Transparent"/>
						<Setter Property="BorderBrush" Value="Transparent"/>
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
										<Border.InputBindings>
											<MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataContext.RenameColourCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>
										</Border.InputBindings>
										<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
									<ControlTemplate.Triggers>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="True"/>
											</MultiTrigger.Conditions>
											<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
											<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="False"/>
												<Condition Property="IsSelected" Value="True"/>
											</MultiTrigger.Conditions>
											<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
											<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="Selector.IsSelectionActive" Value="True"/>
												<Condition Property="IsSelected" Value="True"/>
											</MultiTrigger.Conditions>
											<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
											<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
										</MultiTrigger>
										<Trigger Property="IsEnabled" Value="False">
											<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>
			</ListBox>
			<!-- Saved colour controls -->
			<Grid Margin="0 4 0 0" Grid.Row="1">
				<Grid.Resources>
					<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ThemedButton}">
						<Setter Property="Margin" Value="1"/>
					</Style>
				</Grid.Resources>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="2*"/>
					<ColumnDefinition Width="2*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<Button Content="Add" Command="{Binding AddColourCommand}"/>
				<Button Content="Remove" Grid.Column="1" Command="{Binding RemoveColourCommand}"/>
				<Button Content="Rename" Grid.Row="1" Command="{Binding RenameColourCommand}"/>
				<Button Content="Duplicate" Grid.Column="1" Grid.Row="1" Command="{Binding DuplicateButtonCommand}"/>
				<!-- These arrows are only temporary. -->
				<Button Content="↑" Grid.Column="2" Command="{Binding ColoursMoveCommand}" CommandParameter="{x:Static vm:ItemDirection.Up}"/>
				<Button Content="↓" Grid.Column="2" Grid.Row="1" Command="{Binding ColoursMoveCommand}" CommandParameter="{x:Static vm:ItemDirection.Down}"/>
			</Grid>
			<!-- Colour controls -->
			<StackPanel Grid.Row="2" Margin="0 5 0 0">
				<StackPanel.Resources>
					<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ExpanderButton}">
						<Setter Property="Width" Value="100"/>
						<Setter Property="FontSize" Value="13"/>
						<Setter Property="HorizontalAlignment" Value="Left"/>
						<Setter Property="Margin" Value="0 3"/>
						<Setter Property="Height" Value="20"/>
					</Style>
				</StackPanel.Resources>
				<Button Content="Clear Colours" Command="{Binding ClearColoursCommand}"/>
				<Button Content="Export Colours" Command="{Binding ExportColoursCommand}"/>
				<Button Content="Import Colours" Command="{Binding ImportColoursCommand}"/>
			</StackPanel>
			<CheckBox Style="{DynamicResource ThemedToggleSwitch}" Foreground="{StaticResource Application.Content}" Grid.Row="3" Content="Save colours on close" IsChecked="{Binding SaveColoursOnClose}"/>
			<!--"{Binding SaveColoursOnClose}"/>-->
		</Grid>
	</Grid>
</Window>
